@page "/job-preferences/{id:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IMyJobPreferenceRepository JobPreferenceRepository
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer

<PageTitle>@(JobPreference?.Title ?? "Job Preference") - Odysseus</PageTitle>

<div class="container-fluid">
    @if (IsLoading)
    {
        <div class="row">
            <div class="col-12">
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading job preference...</p>
                </div>
            </div>
        </div>
    }
    else if (JobPreference == null)
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-warning" role="alert">
                    <h5><i class="bi bi-exclamation-triangle"></i> Job Preference Not Found</h5>
                    <p>The job preference you're looking for doesn't exist or you don't have permission to view it.</p>
                    <a href="/job-preferences" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Back to Preferences
                    </a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1 class="h2">
                        <i class="bi bi-briefcase"></i> @JobPreference.Title
                    </h1>
                    <div>
                        <a href="/job-preferences/@JobPreference.Id/edit" class="btn btn-primary me-2">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <button type="button" @onclick="DeleteJobPreference" class="btn btn-outline-danger me-2">
                            <i class="bi bi-trash"></i> Delete
                        </button>
                        <a href="/job-preferences" class="btn btn-secondary">
                            <i class="bi bi-arrow-left"></i> Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="row">
                <div class="col-12">
                    <div class="alert alert-danger" role="alert">
                        <i class="bi bi-exclamation-triangle"></i> @ErrorMessage
                    </div>
                </div>
            </div>
        }

        <div class="row">
            <div class="col-lg-8 mx-auto">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle"></i> Job Preference Details
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <h6 class="text-muted mb-2">Job Title</h6>
                                    <p class="h5 mb-0">@JobPreference.Title</p>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <h6 class="text-muted mb-2">Work Model</h6>
                                    <span class="badge bg-primary fs-6">@JobPreference.WorkModelText</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <h6 class="text-muted mb-2">Contract Type</h6>
                                    <span class="badge bg-secondary fs-6">@JobPreference.ContractText</span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <h6 class="text-muted mb-2">Relocation Support</h6>
                                    <div class="d-flex align-items-center">
                                        <i class="bi @(JobPreference.OfferRelocation ? "bi-check-circle-fill text-success" : "bi-x-circle-fill text-danger") me-2"></i>
                                        <span class="@(JobPreference.OfferRelocation ? "text-success" : "text-danger")">
                                            @JobPreference.RelocationText
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <h6 class="text-muted mb-2">Sponsorship</h6>
                                    <div class="d-flex align-items-center">
                                        <i class="bi @(JobPreference.OfferSponsorship ? "bi-check-circle-fill text-success" : "bi-x-circle-fill text-danger") me-2"></i>
                                        <span class="@(JobPreference.OfferSponsorship ? "text-success" : "text-danger")">
                                            @JobPreference.SponsorshipText
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (JobPreference.TotalCompensation.HasValue)
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-4">
                                        <h6 class="text-muted mb-2">Total Compensation</h6>
                                        <p class="h4 text-success mb-0">@JobPreference.CompensationText</p>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(JobPreference.Notes))
                        {
                            <div class="row">
                                <div class="col-12">
                                    <div class="mb-4">
                                        <h6 class="text-muted mb-2">Additional Notes</h6>
                                        <div class="card bg-light">
                                            <div class="card-body">
                                                <p class="mb-0 text-break">@JobPreference.Notes</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="row">
                            <div class="col-12">
                                <hr />
                                <div class="row">
                                    <div class="col-md-6">
                                        <small class="text-muted">
                                            <i class="bi bi-calendar-plus me-1"></i>
                                            Created: @JobPreference.CreatedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")
                                        </small>
                                    </div>
                                    @if (JobPreference.UpdatedAt != JobPreference.CreatedAt)
                                    {
                                        <div class="col-md-6">
                                            <small class="text-muted">
                                                <i class="bi bi-calendar-check me-1"></i>
                                                Last Updated: @JobPreference.UpdatedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")
                                            </small>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions Card -->
                <div class="card mt-4">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-lightning"></i> Quick Actions
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <a href="/job-preferences/@JobPreference.Id/edit" class="btn btn-outline-primary w-100 mb-2">
                                    <i class="bi bi-pencil me-2"></i> Edit Preference
                                </a>
                            </div>
                            <div class="col-md-4">
                                <a href="/job-preferences/new" class="btn btn-outline-success w-100 mb-2">
                                    <i class="bi bi-plus-lg me-2"></i> Add New Preference
                                </a>
                            </div>
                            <div class="col-md-4">
                                <a href="/job-preferences" class="btn btn-outline-secondary w-100 mb-2">
                                    <i class="bi bi-list me-2"></i> View All Preferences
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }
    
    private MyJobPreferenceViewModel? JobPreference { get; set; }
    private string? ErrorMessage { get; set; }
    private bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadJobPreference();
        IsLoading = false;
    }

    private async Task LoadJobPreference()
    {
        try
        {
            var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = await UserManager.GetUserAsync(authenticationState.User);
            if (user?.Id == null) return;

            var jobPreference = await JobPreferenceRepository.GetByIdAndUserIdAsync(Id, user.Id);
            if (jobPreference != null)
            {
                JobPreference = jobPreference.ToViewModel();
            }
        }
        catch
        {
            ErrorMessage = "Failed to load job preference. Please try again.";
        }
    }

    private async Task DeleteJobPreference()
    {
        try
        {
            var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
                $"Are you sure you want to delete the job preference '{JobPreference?.Title}'? This action cannot be undone.");
            
            if (!confirmed) return;

            var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = await UserManager.GetUserAsync(authenticationState.User);
            if (user?.Id == null) return;

            var success = await JobPreferenceRepository.DeleteAsync(Id, user.Id);
            if (success)
            {
                Navigation.NavigateTo("/job-preferences?message=deleted");
            }
            else
            {
                ErrorMessage = "Failed to delete job preference. Please try again.";
            }
        }
        catch
        {
            ErrorMessage = "An error occurred while deleting the job preference.";
        }
    }
}